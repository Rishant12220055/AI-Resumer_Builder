version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: resume-builder-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: resume_builder
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - resume-builder-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: resume-builder-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password@mongodb:27017/resume_builder?authSource=admin
      DB_NAME: resume_builder
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      GEMINI_API_KEY: your-gemini-api-key-here
      GOOGLE_CLIENT_ID: your-google-client-id-here
      GOOGLE_CLIENT_SECRET: your-google-client-secret-here
      GITHUB_CLIENT_ID: your-github-client-id-here
      GITHUB_CLIENT_SECRET: your-github-client-secret-here
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - resume-builder-network
    volumes:
      - ./backend/logs:/app/logs

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: resume-builder-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      NEXT_PUBLIC_API_URL: http://localhost:5000
      NEXT_PUBLIC_APP_URL: http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - resume-builder-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: resume-builder-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - resume-builder-network

volumes:
  mongodb_data:
    driver: local

networks:
  resume-builder-network:
    driver: bridge 